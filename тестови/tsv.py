from pathlib import Path
from наки.tsv import ЗаглављеГрешка, ПарсирањеГрешка, КолонеПогрешнаВеличинаГрешка, КолонеИменаСеНеПоклапајуГрешка
from enum import EnumMeta


class ТестTSV():
    def __init__(бре, на_диску):
        бре._на_диску = на_диску

    def учитај(бре, путања, неко):
        """ учитај фајл и парсирај елементе """
        assert isinstance(путања, Path), путања
        елементи = []
        for и, ред in enumerate(бре._на_диску, 1):
            if и == 1:
                заг = неко.заглавље()
                if ред != заг:
                    raise ЗаглављеГрешка(f"Заглавље се не поклапа: {заг} {ред}")
            else:
                try:
                    елементи.append(неко.елемент(ред))
                except Exception as е:
                    raise ПарсирањеГрешка(f'(линија:{и}){ред}', е)
        return елементи

    def додај(бре, путања, неко, елементи):
        assert isinstance(путања, Path), путања
        """ додај елементе на крај фајла """
        додај_заглавље = False
        if бре._на_диску:
            ред = бре._на_диску[0]
            заг = неко.заглавље()
            if ред != заг:
                raise ЗаглављеГрешка(f"Заглавље се не поклапа: {заг} {ред}")
        else:
            додај_заглавље = True
        if додај_заглавље:
            бре._на_диску.append(неко.заглавље())
        for елемент in елементи:
            бре._на_диску.append(неко.ред(елемент))

    def учитај_фајл(бре, путања, колоне):
        """ враћа листу редова """
        assert isinstance(путања, Path), путања
        assert isinstance(колоне, EnumMeta), колоне
        редови = []
        for и, ред in enumerate(бре._на_диску, 1):
            if len(колоне) != len(ред):
                raise КолонеПогрешнаВеличинаГрешка(f'[{путања}][ЛИНИЈА: {и}] очекивано: {len(колоне)}, нађено: {len(ред)}')
            редови.append(ред)
        заглавље, редови = редови[0], редови[1:]
        for и, колона in enumerate(колоне):
            if колона.name != заглавље[и]:
                raise КолонеИменаСеНеПоклапајуГрешка(f'[{путања}]ЗАГЛАВЉА_СЕ_НЕ_ПОКЛАПАЈУ: {колона.name} != {заглавље[и]}')
        return редови

    def додај_на_фајл(бре, путања, колоне, редови):
        assert isinstance(путања, Path), путања
        assert isinstance(колоне, EnumMeta), колоне
        """ додај редове у фајл """
        додај_заглавље = False
        if бре._на_диску:
            заглавље = бре._на_диску[0]
            for и, колона in enumerate(колоне):
                if колона.name != заглавље[и]:
                    raise КолонеИменаСеНеПоклапајуГрешка(f'[{путања}]ЗАГЛАВЉА_СЕ_НЕ_ПОКЛАПАЈУ: {колона.name} != {заглавље[и]}')
        else:
            додај_заглавље = True
        if додај_заглавље:
            бре._на_диску.append([к.name for к in колоне])
        for и, ред in enumerate(редови, 1):
            if len(колоне) != len(ред):
                raise КолонеПогрешнаВеличинаГрешка(f'[{путања}][ЛИНИЈА: {и}] очекивано: {len(колоне)}, нађено: {len(ред)}')
            бре._на_диску.append(ред)

