from тест.тест import ТестКонтејнер
from наки.команда import КОД_СПЕЈС
from наки.команда import КОД_ЕНТЕР
from наки.команда import КОД_ЦИР_К
from наки.команда import КОД_ЦИР_Е
from наки.команда import КОД_ЦИР_О
from наки.команда import КОД_ЦИР_Ф
from наки.команда import стринг_команда

СЛЕДЕЋИ = стринг_команда('СЛЕДЕЋИ')

ПУН_ШПИЛ = 100
БРОЈ_ПРОМАШЕНИХ = ПУН_ШПИЛ // 4


def тт(команде):
    тк = ТестКонтејнер(команде, [ПУН_ШПИЛ])
    главна = тк.главна()
    т = тк.терминал()
    return главна.шпилови[0], т


def test_одради_све():
    в, т = тт(['СЛЕДЕЋИ', КОД_СПЕЈС] * 10000)
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == 0
    assert промашене == 0


def test_изађи_на_питању():
    в, т = тт(['СЛЕДЕЋИ', КОД_СПЕЈС] * 2 + [КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ - 2
    assert промашене == 0


def test_изађи_на_одговору():
    в, т = тт(['СЛЕДЕЋИ', КОД_СПЕЈС, 'СЛЕДЕЋИ', КОД_СПЕЈС, 'СЛЕДЕЋИ'] + [КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ - 2
    assert промашене == 0


def test_едит_на_питању():
    в, т = тт([КОД_ЦИР_Е, КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ
    assert промашене == 0
    assert len(т.измене) == 1


def test_едит_на_одговору():
    в, т = тт([КОД_СПЕЈС, КОД_ЦИР_Е, КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ
    assert промашене == 0
    assert len(т.измене) == 1


def test_линк_на_питању():
    в, т = тт([КОД_ЦИР_О, КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ
    assert промашене == 0
    assert len(т.отварања) == 1


def test_линк_на_одговору():
    в, т = тт([КОД_СПЕЈС, КОД_ЦИР_О, КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ
    assert промашене == 0
    assert len(т.отварања) == 1


def test_недозвољенe_командe():
    в, т = тт([КОД_СПЕЈС, 'џ', 'љ', КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ
    assert промашене == 0
    assert т.звукова == 2


def test_неколико_прегледа():
    в, т = тт(['СЛЕДЕЋИ', КОД_СПЕЈС] * 5 + ['СЛЕДЕЋИ', КОД_ЦИР_Ф] * 10 + ['СЛЕДЕЋИ', КОД_ЕНТЕР] * 3 + [КОД_ЦИР_К])
    assert len(в) == ПУН_ШПИЛ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ - 18
    assert промашене == 10


def test_преполови():
    в, т = тт([КОД_ЦИР_К])
    в.преполови()
    assert len(в) == ПУН_ШПИЛ // 2
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ // 2
    assert промашене == 0


def test_избаци_промашене():
    в, т = тт([КОД_ЦИР_К])
    в.избаци_промашене()
    assert len(в) == ПУН_ШПИЛ - БРОЈ_ПРОМАШЕНИХ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == ПУН_ШПИЛ - БРОЈ_ПРОМАШЕНИХ
    assert промашене == 0


def test_задржи_само_промашене():
    в, т = тт([КОД_ЦИР_К])
    в.задржи_само_промашене()
    assert len(в) == БРОЈ_ПРОМАШЕНИХ
    неодрађене, промашене = в()
    assert len(в) == 0
    assert неодрађене == БРОЈ_ПРОМАШЕНИХ
    assert промашене == 0


def test_промена_врсте():
    в, т = тт([КОД_СПЕЈС] * 10000)
    assert len(в) == ПУН_ШПИЛ
    try:
        неодрађене, промашене = в()
        assert False, 'треба да баци пре'
    except StopIteration:
        assert len(в) == 100

