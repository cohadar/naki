from pathlib import Path
from наки.tsv import ЗаглављеГрешка, ПарсирањеГрешка


class Табела():
    def __init__(бре, путања, Тип, на_диску):
        бре._путања = путања
        бре._Тип = Тип
        бре._на_диску = на_диску
        бре._елементи = []

    def учитај(бре):
        бре._елементи.extend(бре._учитај(бре._путања, бре._Тип))

    def додај(бре, елементи):
        бре._елементи.extend(елементи)
        бре._додај(бре._путања, бре._Тип, елементи)

    def __len__(бре):
        return len(бре._елементи)

    def __iter__(бре):
        return iter(бре._елементи)

    def _учитај(бре, путања, неко):
        assert isinstance(путања, Path), путања
        елементи = []
        for и, ред in enumerate(бре._на_диску, 1):
            if и == 1:
                заг = неко.заглавље()
                if ред != заг:
                    raise ЗаглављеГрешка(f"Заглавље се не поклапа: {заг} {ред}")
            else:
                try:
                    елементи.append(неко.елемент(ред))
                except Exception as е:
                    raise ПарсирањеГрешка(f'(линија:{и}){ред}', е)
        return елементи

    def _додај(бре, путања, неко, елементи):
        assert isinstance(путања, Path), путања
        додај_заглавље = False
        if бре._на_диску:
            ред = бре._на_диску[0]
            заг = неко.заглавље()
            if ред != заг:
                raise ЗаглављеГрешка(f"Заглавље се не поклапа: {заг} {ред}")
        else:
            додај_заглавље = True
        if додај_заглавље:
            бре._на_диску.append(неко.заглавље())
        for елемент in елементи:
            бре._на_диску.append(неко.ред(елемент))

