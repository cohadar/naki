from наки.__main__ import Контејнер
import dependency_injector.providers as providers


def направи_карте(извор_фајл, извор, врста_карте, ф_питање, ф_одговор, индекс):
    """ постарај се да индекс буде јединствен при сваком позиву """
    assert 0 <= индекс and индекс < 16
    карте = []
    for линија, џ in enumerate(извор, 2):
        ид = џ[0]  # претпоставка је да је нулто поље ИД
        assert ид[-1] == '0', 'извор ид мора да се завршава са нулом: ' + ид
        ид = ид[:-1] + hex(индекс)[-1]
        карте.append([ид, врста_карте, ф_питање(џ), ф_одговор(џ), извор_фајл, линија])
    return карте


def одради_шпил(т_карти, т_линкова, дир, извор_учитај, извор_одради):
    карте = []
    линкови = []
    извор_дир = дир.joinpath('извор')
    for извор_фајл in sorted(ф for ф in извор_дир.iterdir() if ф.is_file()):
        лепа_путања = дир.name + '/извор/' + извор_фајл.name
        print(лепа_путања)
        извор = извор_учитај(извор_фајл)
        к, л = извор_одради(лепа_путања, извор)
        карте.extend(к)
        линкови.extend(л)
    путања = дир.joinpath('карте.tsv')
    if путања.exists():
        путања.unlink()
    т_карти.додај(карте)
    if линкови:
        путања = дир.joinpath('линкови.tsv')
        if путања.exists():
            путања.unlink()
        т_линкова.додај(линкови)


def нађи_извор(име_шпила):
    if име_шпила in ["de_Basic", "de_Präteritum"]:
        from каталог.извори.de_basic import извор_учитај, извор_одради
    elif име_шпила in ["de_Verben"]:
        from каталог.извори.de_verben import извор_учитај, извор_одради
    elif име_шпила == "de_Nomen":
        from каталог.извори.de_nomen import извор_учитај, извор_одради
    elif име_шпила == "de_Und":
        from каталог.извори.de_und import извор_учитај, извор_одради
    elif име_шпила == "de_Cloze":
        from каталог.извори.de_cloze import извор_учитај, извор_одради
    elif име_шпила == "de_Deklination":
        from каталог.извори.de_deklination import извор_учитај, извор_одради
    elif име_шпила in ["de_Einweg", "чворови", "_SVAKI_DAN_"]:
        from каталог.извори.de_einweg import извор_учитај, извор_одради
    elif име_шпила == "песме":
        from каталог.извори.песме import извор_учитај, извор_одради
    elif име_шпила.startswith("тест_"):
        from каталог.извори.тест_дата_генератор import извор_учитај, извор_одради
    else:
        raise Exception(f"Некатегоризован шпил: {име_шпила}")
    return (извор_учитај, извор_одради)


def главна():
    к = Контејнер()
    for дир in к.дирови():
        к.дир.override(providers.Object(дир))
        шпил = к.шпил()
        извор_учитај, извор_одради = нађи_извор(шпил._дир.name)
        одради_шпил(к.т_карти(), к.т_линкова(), шпил._дир, извор_учитај, извор_одради)


if __name__ == '__main__':
    главна()

