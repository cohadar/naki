from pathlib import Path
from collections import namedtuple


ТабелаИнтервала = namedtuple('ТабелаИнтервала', ['путања'])
ТабелаКарти = namedtuple('ТабелаКарти', ['путања'])
ТабелаЛинкова = namedtuple('ТабелаЛинкова', ['путања'])
ТабелаЗаписа = namedtuple('ТабелаЗаписа', ['путања'])

ПогледИнтервала = namedtuple('ПогледИнтервала', ['табела'])
ПогледКарти = namedtuple('ПогледКарти', ['табела'])
ПогледЛинкова = namedtuple('ПогледЛинкова', ['табела'])
ПогледЗаписа = namedtuple('ПогледЗаписа', ['табела'])

Шпил = namedtuple('Шпил', ['име', 'п_интервала', 'п_карти', 'п_линкова', 'п_записа'])
Вежбање = namedtuple('Вежбање', ['путања_каталога', 'шпил'])
Терминал = namedtuple('Терминал', [])
UI = namedtuple('UI', ['терминал'])
Главна = namedtuple('Главна', ['ui', 'вежбања'])

ТестТерминал = namedtuple('ТестТерминал', ['команде'])
ТестТабела = namedtuple('ТестТабела', ['путања', 'на_диску'])


class ВежбањеЗидар():
    def __init__(бре, каталог, дир):
        бре.каталог = каталог
        бре.дир = дир

    def __call__(бре):
        return бре.вежбање()

    def вежбање(бре):
        return Вежбање(бре.каталог, бре.шпил())

    def шпил(бре):
        return Шпил(
            бре.дир.name,
            бре.п_интервала(бре.дир.joinpath('интервали.tsv')),
            бре.п_карти(бре.дир.joinpath('карте.tsv')),
            бре.п_линкова(бре.дир.joinpath('линкови.tsv')),
            бре.п_записа(бре.дир.joinpath('запис.tsv')))

    def п_интервала(бре, путања):
        return ПогледИнтервала(бре.т_интервала(путања))

    def п_карти(бре, путања):
        return ПогледКарти(бре.т_карти(путања))

    def п_линкова(бре, путања):
        return ПогледЛинкова(бре.т_линкова(путања))

    def п_записа(бре, путања):
        return ПогледЗаписа(бре.т_записа(путања))

    def т_интервала(бре, путања):
        return ТабелаИнтервала(путања)

    def т_карти(бре, путања):
        return ТабелаКарти(путања)

    def т_линкова(бре, путања):
        return ТабелаЛинкова(путања)

    def т_записа(бре, путања):
        return ТабелаЗаписа(путања)


class ГлавнаЗидар():
    def __init__(бре, каталог):
        бре.каталог = каталог
        бре.дирови = [фајл for фајл in каталог.iterdir() if фајл.is_dir() and not фајл.name.startswith('__')]

    def __call__(бре):
        return бре.главна()

    def главна(бре):
        return Главна(бре.ui(), бре.листа_вежбања())

    def ui(бре):
        return UI(бре.терминал())

    def терминал(бре):
        return Терминал()

    def листа_вежбања(бре):
        return [ВежбањеЗидар(бре.каталог, дир)() for дир in бре.дирови]


class ТестВежбањеЗидар(ВежбањеЗидар):
    def __init__(бре, каталог, дир, лен):
        super().__init__(каталог, дир)
        бре.лен = лен
        бре.на_диску = list(range(лен))

    def т_интервала(бре, путања):
        return ТестТабела(путања, бре.на_диску)

    def т_карти(бре, путања):
        return ТестТабела(путања, бре.на_диску)

    def т_линкова(бре, путања):
        return ТестТабела(путања, бре.на_диску)

    def т_записа(бре, путања):
        return ТестТабела(путања, бре.на_диску)


class ТестЗидар(ГлавнаЗидар):
    def __init__(бре, каталог, команде):
        super().__init__(каталог)
        бре.команде = команде

    def терминал(бре):
        return ТестТерминал(бре.команде)

    def листа_вежбања(бре):
        return [ТестВежбањеЗидар(бре.каталог, дир, и)() for и, дир in enumerate(бре.дирови, 1)]


def г2(каталог):
    гз = ТестЗидар(каталог, ['a', 'b', 'c'])
    return гз.главна()


def main():
    каталог = Path('каталог')
    а2 = г2(каталог)
    print(а2)


if __name__ == '__main__':
    main()

