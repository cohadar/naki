import os
import sys
import subprocess
from наки.конфигурација import ПУТАЊА_КАТАЛОГА
from наки.команда import КОМАНДА_ПРЕКИД, КОМАНДА_ОТВОРИ_УРЛ, КОМАНДА_ЕДИТУЈ
from наки.команда import КОМАНДА_ФЕЈЛ, КОМАНДА_ПЛУС1, КОМАНДА_ПЛУС2
from наки.карте import Карта


def отвори_урл(урл):
    if sys.platform == 'win32':
        os.startfile(урл)
    elif sys.platform == 'darwin':
        subprocess.Popen(['open', урл])
    else:
        subprocess.Popen(['xdg-open', урл])


def измени(лепа_путања, линија):
    права_путања = ПУТАЊА_КАТАЛОГА.joinpath(лепа_путања)
    subprocess.run(['vim', '+' + линија, '+normal_WW', str(права_путања)])


def питање_и_одговор(терминал, карта, број_преосталих_карата, урл):
    терминал.обриши()
    with терминал.главни():
        терминал.принт_наслов(карта[Карта.ВРСТА_КАРТЕ.value])
        терминал.принт_мд(карта[Карта.ПИТАЊЕ.value])
        терминал.принт_сепаратор('-')
        with терминал.статус():
            терминал.принт_сепаратор('=', број_преосталих_карата)
            терминал.принт('притисни било који тастер')
        while True:
            к = терминал.унеси_команду()
            if к == КОМАНДА_ПРЕКИД:
                return (True, None)
            if к == КОМАНДА_ОТВОРИ_УРЛ:
                if урл:
                    отвори_урл(урл)
                else:
                    терминал.звук_грешке()
                continue
            if к == КОМАНДА_ЕДИТУЈ:
                измени(карта[Карта.ИЗВОР.value], карта[Карта.ЛИНИЈА.value])
                continue
            break
        терминал.принт_мд(карта[Карта.ОДГОВОР.value])
        with терминал.статус():
            терминал.принт_сепаратор('=', број_преосталих_карата)
            терминал.принт('оцени одговор (f: 0)(space: +1)(enter: +2)')
        ДОЗВОЉЕНЕ = [КОМАНДА_ПРЕКИД, КОМАНДА_ОТВОРИ_УРЛ, КОМАНДА_ЕДИТУЈ, КОМАНДА_ФЕЈЛ, КОМАНДА_ПЛУС1, КОМАНДА_ПЛУС2]
        while True:
            к = терминал.унеси_команду(ДОЗВОЉЕНЕ)
            if к == КОМАНДА_ПРЕКИД:
                return (True, None)
            elif к == КОМАНДА_ОТВОРИ_УРЛ:
                if урл:
                    отвори_урл(урл)
                else:
                    терминал.звук_грешке()
                continue
            elif к == КОМАНДА_ЕДИТУЈ:
                измени(карта[Карта.ИЗВОР.value], карта[Карта.ЛИНИЈА.value])
                continue
            elif к == КОМАНДА_ФЕЈЛ:
                return (False, 0)
            elif к == КОМАНДА_ПЛУС1:
                return (False, 1)
            elif к == КОМАНДА_ПЛУС2:
                return (False, 2)
            else:
                raise Exception(f'непозната команда: {к}')


class Вежбање():
    def __init__(бре, шпил):
        бре.шпил = шпил

    def име_шпила(бре):
        return бре.шпил.име()

    def __len__(бре):
        return len(бре.шпил)

    def __call__(бре, терминал):
        бре.шпил.рандомизуј()
        неодрађене = set(карта[Карта.ИД] for карта in бре.шпил)
        промашене = set()
        for карта in бре.шпил:
            ид = карта[Карта.ИД]
            урл = бре.шпил.урл(ид)
            број_карата = f"{len(неодрађене)}+{len(промашене)}"
            прекид, оцена = питање_и_одговор(терминал, карта, број_карата, урл)
            if прекид:
                break
            бре.шпил.оцена(ид, оцена)
            неодрађене.discard(ид)
            if оцена > 0:
                промашене.discard(ид)
            else:
                промашене.add(ид)
        бре.шпил.clear()

    def преполови(бре):
        бре.активне = бре.активне[::2]

    def избаци_промашене(бре):
        бре.активне = [к for к in бре.активне if бре.последња_оцена.get(к[Карта.ИД], 0) > 0]

    def __eq__(бре, други):
        if not isinstance(други, Вежбање):
            return False
        return бре.шпил == други.шпил

    def __repr__(бре):
        return f"{бре.шпил}"
