import sys
import time
from random import shuffle
from collections import defaultdict
from datetime import date, timedelta
from collections import Counter
from enum import IntEnum, unique
from наки import tsv


@unique
class Карта(IntEnum):
    ИД = 0
    ВРСТА_КАРТЕ = 1
    ПИТАЊЕ = 2
    ОДГОВОР = 3
    ИЗВОР = 4
    ЛИНИЈА = 5


@unique
class Запис(IntEnum):
    КАРТА_ИД = 0
    ДАТУМ_ПРЕГЛЕДА = 1
    ВРЕМЕ_ПРЕГЛЕДА = 2
    РЕЗУЛТАТ_ПРЕГЛЕДА = 3
    НОВИ_ИНТЕРВАЛ = 4


@unique
class Линк(IntEnum):
    ИД = 0
    УРЛ = 1


@unique
class Интервали(IntEnum):
    ДАТУМ = 0
    И1 = 1
    И2 = 2
    И3 = 3
    И4 = 4
    И5 = 5
    И6 = 6
    И7 = 7
    И8 = 8
    И9 = 9


МАКС_ИНТЕРВАЛ = len(Интервали)


def направи_карте(извор_фајл, извор, врста_карте, ф_питање, ф_одговор, индекс):
    """ постарај се да индекс буде јединствен при сваком позиву """
    assert 0 <= индекс and индекс < 16
    карте = []
    for линија, џ in enumerate(извор, 2):
        ид = џ[0]  # претпоставка је да је нулто поље ИД
        assert ид[-1] == '0', 'извор ид мора да се завршава са нулом: ' + ид
        ид = ид[:-1] + hex(индекс)[-1]
        карте.append([ид, врста_карте, ф_питање(џ), ф_одговор(џ), извор_фајл, линија])
    return карте


def учитај_интервале(путања):
    интервали = tsv.учитај_фајл(путања, Интервали)
    интервали = интервали[-1][1:]
    return [int(и) for и in интервали]


def учитај_запис(путања):
    нови_интервал = Counter()
    датум_прегледа = {}
    последња_оцена = {}
    if путања.exists():
        запис = tsv.учитај_фајл(путања, Запис)
        for з in запис:
            оцена = int(з[Запис.РЕЗУЛТАТ_ПРЕГЛЕДА])
            последња_оцена[з[Запис.КАРТА_ИД]] = оцена
            if оцена > 0:
                нови_интервал[з[Запис.КАРТА_ИД]] = int(з[Запис.НОВИ_ИНТЕРВАЛ])
                датум_прегледа[з[Запис.КАРТА_ИД]] = date.fromisoformat(з[Запис.ДАТУМ_ПРЕГЛЕДА])
    return (нови_интервал, датум_прегледа, последња_оцена)


def учитај_линкове(путања):
    линк_мапа = {}
    if путања.exists():
        линкови = tsv.учитај_фајл(путања, Линк)
        for л in линкови:
            линк_мапа[л[Линк.ИД]] = л[Линк.УРЛ]
    return линк_мапа


def провера_јединствености(карте):
    нађено = False
    дупло = set()
    for карта in карте:
        питање = f"{карта[Карта.ВРСТА_КАРТЕ]}: {карта[Карта.ПИТАЊЕ]}"
        if питање in дупло:
            print(f"ДУПЛИКАТ: {питање}", file=sys.stderr)
            нађено = True
        дупло.add(питање)
    if нађено:
        sys.exit(1)


def извор_ид(карта_ид):
    return карта_ид[:-1] + '0'


class Шпил():
    def _може_данас(бре, ид):
        данас = date.today()
        давно = date.fromisoformat('1970-01-01')
        дп = бре.датум_прегледа.get(ид, давно)
        ни = timedelta(days=бре.интервали[бре.нови_интервал[ид]-1])
        return данас > дп + ни

    def _учитај_активне_карте(бре, путања):
        карте = tsv.учитај_фајл(путања, Карта)
        провера_јединствености(карте)
        return [карта for карта in карте if бре._може_данас(карта[Карта.ИД])]

    def __init__(бре, путања):
        бре.путања_шпилa = путања
        бре.интервали = учитај_интервале(путања.joinpath('интервали.tsv'))
        бре.запис_путања = путања.joinpath('запис.tsv')
        бре.нови_интервал, бре.датум_прегледа, бре.последња_оцена = учитај_запис(бре.запис_путања)
        бре.линк_мапа = учитај_линкове(путања.joinpath('линкови.tsv'))
        бре.активне = бре._учитај_активне_карте(путања.joinpath('карте.tsv'))

    def рандомизуј(бре):
        по_врсти = defaultdict(list)
        for карта in бре.активне:
            врста = карта[Карта.ВРСТА_КАРТЕ]
            по_врсти[врста].append(карта)
        темп = []
        for в in по_врсти.values():
            shuffle(в)
            темп.extend(в)
        бре.активне = темп

    def __len__(бре):
        return len(бре.активне)

    def __iter__(бре):
        return iter(бре.активне)

    def clear(бре):
        бре.активне.clear()

    def урл(бре, ид):
        return бре.линк_мапа.get(извор_ид(ид), None)

    def оцена(бре, ид, оцена):
        бре.нови_интервал[ид] = min(бре.нови_интервал[ид] + оцена, МАКС_ИНТЕРВАЛ)
        ред = [
            ид,
            time.strftime('%Y-%m-%d'),
            time.strftime('%H:%M:%S%z'),
            оцена,
            бре.нови_интервал[ид],
        ]
        tsv.додај_на_фајл(бре.запис_путања, Запис, [ред])

    def име(бре):
        return бре.путања_шпилa.name

    def преполови(бре):
        бре.активне = бре.активне[::2]

    def избаци_промашене(бре):
        бре.активне = [к for к in бре.активне if бре.последња_оцена.get(к[Карта.ИД], 0) > 0]
