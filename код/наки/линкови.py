from наки import tsv
from enum import unique, IntEnum
# from collections import namedtuple
from наки.ид import assert_ид, извор_ид


@unique
class ЛинкЕнум(IntEnum):
    ИД = 0
    УРЛ = 1


# Линк = namedtuple('Линк', ['ид', 'урл'])

class ТабелаЛинкова():
    def __init__(бре, путања):
        бре._путања = путања
        бре._редови = []

    def учитај(бре):
        бре._редови = tsv.учитај_фајл(бре._путања, ЛинкЕнум) if бре._путања.exists() else []

    def додај(бре, редови):
        бре._редови.extend(редови)
        tsv.додај_на_фајл(бре._путања, ЛинкЕнум, редови)

    def препиши(бре, редови):
        бре._редови = редови
        tsv.препиши_фајл(бре._путања, ЛинкЕнум, редови)

    def __len__(бре):
        return len(бре._редови)

    def __iter__(бре):
        return iter(бре._редови)


class ПогледЛинкова():
    def __init__(бре, табела):
        бре._табела = табела
        бре._линк_мапа = {}
        бре._табела.учитај()
        for л in табела:
            ид = л[ЛинкЕнум.ИД]
            урл = л[ЛинкЕнум.УРЛ]
            assert_ид(ид)
            if ид in бре._линк_мапа:
                raise ValueError(f"Дупли линк ид: {ид}")
            бре._линк_мапа[ид] = урл

    def линк(бре, ид):
        урл = бре._линк_мапа.get(ид, None)
        if not урл:
            урл = бре._линк_мапа.get(извор_ид(ид), None)
        return урл
