УРЕЗ = ' ' * 40
БОЈА_СИВА = 7


class Терминал():

    def __init__(ја, сирови_терминал):
        ја.т = сирови_терминал
        ја._претходни_текст = ""
        ја._зелено = False

    def пун_екран(ја):
        return ја.т.fullscreen()

    def сакривен_курсор(ја):
        return ја.т.hidden_cursor()

    def обриши(ја):
        ја.т.print(ја.т.clear)

    def главни(ја):
        return ја.т.location(0, 9)

    def статус(ја):
        return ја.т.location(0, ја.т.height-9)

    def принт(ја, *args, **kw):
        ја.т.print(УРЕЗ, end='')
        ја.т.print(*args, **kw)

    def формат_мд(ја, текст):
        """ текст са [болд] и {плавим} нагласцима """
        текст = текст.replace('[[', 'ДУПЛЕ_КОЦКАСТЕ_ЛЕВЕ').replace(']]', 'ДУПЛЕ_КОЦКАСТЕ_ДЕСНЕ')
        текст = текст.replace('[', 'ЈЕДНА_КОЦКАСТА_ЛЕВА').replace(']', 'ЈЕДНА_КОЦКАСТА_ДЕСНА')
        текст = текст.replace('{{{', 'ТРОСТРУКЕ_ВИТИЧАСТЕ_ЛЕВЕ').replace('}}}', 'ТРОСТРУКЕ_ВИТИЧАСТЕ_ДЕСНЕ')
        текст = текст.replace('{{', 'ДУПЛЕ_ВИТИЧАСТЕ_ЛЕВЕ').replace('}}', 'ДУПЛЕ_ВИТИЧАСТЕ_ДЕСНЕ')
        текст = текст.replace('{', 'ЈЕДНА_ВИТИЧАСТА_ЛЕВА').replace('}', 'ЈЕДНА_ВИТИЧАСТА_ДЕСНА')
        текст = текст.replace('ДУПЛЕ_КОЦКАСТЕ_ЛЕВЕ', '[').replace('ДУПЛЕ_КОЦКАСТЕ_ДЕСНЕ', ']')
        текст = текст.replace('ДУПЛЕ_ВИТИЧАСТЕ_ЛЕВЕ', '{').replace('ДУПЛЕ_ВИТИЧАСТЕ_ДЕСНЕ', '}')
        текст = текст.replace('ЈЕДНА_КОЦКАСТА_ЛЕВА', ја.т.bold).replace('ЈЕДНА_КОЦКАСТА_ДЕСНА', ја.т.normal)
        текст = текст.replace('ЈЕДНА_ВИТИЧАСТА_ЛЕВА', ја.т.blue).replace('ЈЕДНА_ВИТИЧАСТА_ДЕСНА', ја.т.normal)
        текст = текст.replace('ТРОСТРУКЕ_ВИТИЧАСТЕ_ЛЕВЕ', ја.т.blue + '{')
        текст = текст.replace('ТРОСТРУКЕ_ВИТИЧАСТЕ_ДЕСНЕ', '}' + ја.т.normal)
        return текст

    def принт_мд(ја, текст):
        """ принт маркдовн текст """
        for т in ја.формат_мд(текст).split('\\n'):
            ја.принт(т)

    def принт_наслов(ја, текст):
        if ја._претходни_текст != текст:
            ја._зелено = not ја._зелено
        ја._претходни_текст = текст
        if ја._зелено:
            ја.принт(ја.т.green(текст))
        else:
            ја.принт(ја.т.blue(текст))
        ја.принт()

    def принт_сепаратор(ја, c, број=None):
        if број is None:
            ја.принт(ја.т.color(БОЈА_СИВА) + (c * 60) + ја.т.normal)
        else:
            ја.принт(ја.т.color(БОЈА_СИВА) + (c * 1) + f"[{број}]" + (c * (59 - len(f"[{број}]"))) + ја.т.normal)

    def звук_грешке(ја):
        ја.т.print('\a', end='', flush=True)

    def одабери_један(ја, листа, опис, екстра=None):
        while True:
            ја.обриши()
            with ја.статус():
                ја.принт_сепаратор('=')
                ја.принт(опис)
            with ја.главни():
                ја.принт_листа(листа)
                индекс = ја.инпут_индекс(len(листа), екстра=екстра)
                if индекс == -1:
                    ја.звук_грешке()
                else:
                    return индекс

    def принт_листа(ја, листа, индекси=None):
        if индекси is None:
            for индекс, елемент in enumerate(листа, 1):
                ја.принт(f"{индекс}) {елемент}")
        else:
            for индекс, елемент in enumerate(листа, 1):
                статус = '[x]' if индекс in индекси else '[ ]'
                ја.принт(f"{статус} {индекс}) {елемент}")

    def инпут(ја, текст):
        return ја.т.input(УРЕЗ + текст)

    def инпут_индекс(ја, број_елемента, екстра=None):
        индекс = ја.инпут('#? ')
        if екстра and екстра(индекс):
            return индекс
        try:
            индекс = int(индекс)
            if индекс > 0 and индекс <= број_елемента:
                return индекс
            return -1
        except ValueError:
            return -1

    def инпут_код(ја, екстра=None):
        if екстра:
            while True:
                к = ја.т.readkey()
                if екстра(к):
                    return к
                ја.звук_грешке()
        return ја.т.readkey()

    def измени(ја, права_путања, линија):
        ја.т.измени(права_путања, линија)

    def отвори_урл(ја, урл):
        ја.т.отвори_урл(урл)

