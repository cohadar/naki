# random magic number
_ГРЕШКА = -327304501


def принт(терминал, листа, индекси=None):
    if индекси is None:
        for индекс, елемент in enumerate(листа, 1):
            терминал.принт(f"{индекс}) {елемент}")
    else:
        for индекс, елемент in enumerate(листа, 1):
            статус = '[x]' if индекс in индекси else '[ ]'
            терминал.принт(f"{статус} {индекс}) {елемент}")


def унеси_индекс(теминал, број_елемента, екстра=None):
    индекс = теминал.инпут('#? ')
    if екстра and индекс in екстра:
        return индекс
    try:
        индекс = int(индекс)
        if индекс > 0 and индекс <= број_елемента:
            return индекс
        return _ГРЕШКА
    except ValueError:
        return _ГРЕШКА


def један(терминал, листа, опис, екстра=None):
    while True:
        терминал.обриши()
        with терминал.статус():
            терминал.принт_сепаратор('=')
            терминал.принт(опис)
        with терминал.главни():
            принт(терминал, листа)
            индекс = унеси_индекс(терминал, len(листа), екстра)
            if индекс == _ГРЕШКА:
                терминал.звук_грешке()
            else:
                return индекс


def више(терминал, листа, опис):
    индекси = set()
    while True:
        терминал.обриши()
        with терминал.статус():
            терминал.принт_сепаратор('=')
            терминал.принт(опис)
        with терминал.главни():
            принт(терминал, листа, индекси)
            индекс = унеси_индекс(терминал, len(листа))
            if индекс in индекси:
                индекси.remove(индекс)
            elif индекс == _КРАЈ:
                if len(индекси) > 0:
                    return индекси
                терминал.звук_грешке()
            elif индекс == _СВЕ:
                if len(индекси) > 0:
                    индекси.clear()
                else:
                    индекси.update(range(1, len(листа) + 1))
            elif индекс == _ГРЕШКА:
                терминал.звук_грешке()
            else:
                индекси.add(индекс)
